{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/bid%20master/app/api/auctions/%5Bid%5D/bid/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\n/**\r\n * 시드를 사용한 랜덤 매물 데이터 생성 함수\r\n * 매물 목록 API와 동일한 로직을 사용하여 일관된 데이터를 생성합니다.\r\n */\r\nfunction generateRandomPropertyWithSeed(seed: string) {\r\n  const locations = [\r\n    \"강남구\",\r\n    \"서초구\",\r\n    \"송파구\",\r\n    \"마포구\",\r\n    \"용산구\",\r\n    \"성동구\",\r\n    \"영등포구\",\r\n    \"강동구\",\r\n    \"노원구\",\r\n    \"종로구\",\r\n    \"중구\",\r\n    \"강서구\",\r\n    \"동작구\",\r\n  ];\r\n\r\n  const propertyTypes = [\r\n    \"아파트\",\r\n    \"오피스텔\",\r\n    \"빌라\",\r\n    \"상가\",\r\n    \"단독주택\",\r\n    \"원룸\",\r\n  ];\r\n  const riskTypes = [\"LOW\", \"MEDIUM\", \"HIGH\", \"VERY_HIGH\"];\r\n\r\n  // 시드 기반 랜덤 선택 (더 다양하게)\r\n  const seedHash = seed.split(\"\").reduce((a, b) => {\r\n    a = (a << 5) - a + b.charCodeAt(0);\r\n    return a & a;\r\n  }, 0);\r\n\r\n  const locationIndex = Math.abs(seedHash) % locations.length;\r\n  const propertyTypeIndex = Math.abs(seedHash >> 8) % propertyTypes.length;\r\n  const riskTypeIndex = Math.abs(seedHash >> 16) % riskTypes.length;\r\n\r\n  const location = locations[locationIndex];\r\n  const propertyType = propertyTypes[propertyTypeIndex];\r\n  const riskType = riskTypes[riskTypeIndex];\r\n\r\n  // 매물 유형별 특성에 맞는 면적과 가격 설정\r\n  let area, appraisedValue;\r\n\r\n  switch (propertyType) {\r\n    case \"아파트\":\r\n      area = 60 + (Math.abs(seedHash >> 24) % 90); // 60-150㎡\r\n      appraisedValue = 300000000 + (Math.abs(seedHash >> 32) % 1200000000); // 3억-15억\r\n      break;\r\n    case \"오피스텔\":\r\n      area = 25 + (Math.abs(seedHash >> 24) % 50); // 25-75㎡\r\n      appraisedValue = 150000000 + (Math.abs(seedHash >> 32) % 850000000); // 1.5억-10억\r\n      break;\r\n    case \"빌라\":\r\n      area = 30 + (Math.abs(seedHash >> 24) % 70); // 30-100㎡\r\n      appraisedValue = 200000000 + (Math.abs(seedHash >> 32) % 800000000); // 2억-10억\r\n      break;\r\n    case \"상가\":\r\n      area = 40 + (Math.abs(seedHash >> 24) % 110); // 40-150㎡\r\n      appraisedValue = 100000000 + (Math.abs(seedHash >> 32) % 1400000000); // 1억-15억\r\n      break;\r\n    case \"단독주택\":\r\n      area = 80 + (Math.abs(seedHash >> 24) % 120); // 80-200㎡\r\n      appraisedValue = 400000000 + (Math.abs(seedHash >> 32) % 1100000000); // 4억-15억\r\n      break;\r\n    case \"원룸\":\r\n      area = 15 + (Math.abs(seedHash >> 24) % 35); // 15-50㎡\r\n      appraisedValue = 80000000 + (Math.abs(seedHash >> 32) % 420000000); // 8천만-5억\r\n      break;\r\n    default:\r\n      area = 25 + (Math.abs(seedHash >> 24) % 125);\r\n      appraisedValue = 50000000 + (Math.abs(seedHash >> 32) % 1450000000);\r\n  }\r\n\r\n  // 시작 입찰가 (감정가의 70-85%)\r\n  const startingBidRate = 0.7 + (Math.abs(seedHash >> 40) % 15) / 100;\r\n  const startingBid = Math.floor(appraisedValue * startingBidRate);\r\n\r\n  // 시장가 (감정가와 다르게 설정 - 85-120% 범위)\r\n  const marketPriceRate = 0.85 + (Math.abs(seedHash >> 48) % 35) / 100; // 85-120%\r\n  const marketPrice = Math.floor(appraisedValue * marketPriceRate);\r\n\r\n  // 매물 유형별 제목 생성 (더 다양하고 현실적인 이름)\r\n  let title = \"\";\r\n\r\n  switch (propertyType) {\r\n    case \"아파트\":\r\n      const apartmentBrands = [\r\n        \"래미안\",\r\n        \"힐스테이트\",\r\n        \"아크로\",\r\n        \"헬리오시티\",\r\n        \"드림팰리스\",\r\n        \"래미안아트팰리스\",\r\n        \"타워팰리스\",\r\n        \"아이파크\",\r\n        \"자이\",\r\n        \"센트럴파크\",\r\n        \"트리지움\",\r\n      ];\r\n      const apartmentName =\r\n        apartmentBrands[Math.abs(seedHash >> 56) % apartmentBrands.length];\r\n      const buildingNum = Math.floor(Math.abs(seedHash >> 64) % 5) + 101; // 101-105동\r\n      const floorNum = Math.floor(Math.abs(seedHash >> 72) % 20) + 1; // 1-20층\r\n      const roomNum = Math.floor(Math.abs(seedHash >> 80) % 4) + 1; // 1-4호\r\n      title = `${location} ${apartmentName} ${buildingNum}동 ${floorNum}${roomNum}호`;\r\n      break;\r\n    case \"오피스텔\":\r\n      const officetelBrands = [\r\n        \"비즈니스텔\",\r\n        \"스마트오피스텔\",\r\n        \"비즈니스센터\",\r\n        \"오피스텔\",\r\n        \"비즈니스빌딩\",\r\n        \"스마트빌딩\",\r\n      ];\r\n      const officetelName =\r\n        officetelBrands[Math.abs(seedHash >> 56) % officetelBrands.length];\r\n      const officetelFloor = Math.floor(Math.abs(seedHash >> 64) % 10) + 1; // 1-10층\r\n      const officetelRoom = Math.floor(Math.abs(seedHash >> 72) % 20) + 1; // 1-20호\r\n      title = `${location} ${officetelName} ${officetelFloor}층 ${officetelRoom}호`;\r\n      break;\r\n    case \"빌라\":\r\n      const villaNames = [\r\n        \"빌라\",\r\n        \"다세대주택\",\r\n        \"연립주택\",\r\n        \"다가구주택\",\r\n        \"빌딩\",\r\n        \"주택\",\r\n      ];\r\n      const villaName =\r\n        villaNames[Math.abs(seedHash >> 56) % villaNames.length];\r\n      const villaFloor = Math.floor(Math.abs(seedHash >> 64) % 4) + 1; // 1-4층\r\n      const villaRoom = Math.floor(Math.abs(seedHash >> 72) % 10) + 1; // 1-10호\r\n      title = `${location} ${villaName} ${villaFloor}층 ${villaRoom}호`;\r\n      break;\r\n    case \"상가\":\r\n      const commercialNames = [\r\n        \"상가\",\r\n        \"상가건물\",\r\n        \"상업시설\",\r\n        \"상가동\",\r\n        \"상가빌딩\",\r\n        \"상가건물\",\r\n      ];\r\n      const commercialName =\r\n        commercialNames[Math.abs(seedHash >> 56) % commercialNames.length];\r\n      const commercialFloor = Math.floor(Math.abs(seedHash >> 64) % 5) + 1; // 1-5층\r\n      const commercialRoom = Math.floor(Math.abs(seedHash >> 72) % 20) + 1; // 1-20호\r\n      title = `${location} ${commercialName} ${commercialFloor}층 ${commercialRoom}호`;\r\n      break;\r\n    case \"단독주택\":\r\n      const houseNames = [\r\n        \"단독주택\",\r\n        \"주택\",\r\n        \"한옥\",\r\n        \"단독주택\",\r\n        \"주택\",\r\n        \"단독주택\",\r\n      ];\r\n      const houseName =\r\n        houseNames[Math.abs(seedHash >> 56) % houseNames.length];\r\n      title = `${location} ${houseName} ${area}㎡`;\r\n      break;\r\n    case \"원룸\":\r\n      const studioNames = [\r\n        \"원룸\",\r\n        \"스튜디오\",\r\n        \"원룸\",\r\n        \"스튜디오\",\r\n        \"원룸\",\r\n        \"스튜디오\",\r\n      ];\r\n      const studioName =\r\n        studioNames[Math.abs(seedHash >> 56) % studioNames.length];\r\n      const studioFloor = Math.floor(Math.abs(seedHash >> 64) % 10) + 1; // 1-10층\r\n      const studioRoom = Math.floor(Math.abs(seedHash >> 72) % 20) + 1; // 1-20호\r\n      title = `${location} ${studioName} ${studioFloor}층 ${studioRoom}호`;\r\n      break;\r\n    default:\r\n      title = `${location} ${propertyType} ${area}㎡`;\r\n  }\r\n\r\n  // 시드 기반 이미지 URL 생성 (일관성 유지)\r\n  const imageSeed = Math.abs(\r\n    seed.split(\"\").reduce((a, b) => a + b.charCodeAt(0), 0)\r\n  );\r\n  const imageUrl = `https://images.unsplash.com/photo-${imageSeed}?w=400&h=300&fit=crop`;\r\n\r\n  // 시드 기반 추가 데이터 생성\r\n  const riskData = {\r\n    legalIssues: Math.abs(seedHash >> 88) % 2 === 0,\r\n    marketVolatility: Math.abs(seedHash >> 96) % 3,\r\n    competitionLevel: Math.abs(seedHash >> 104) % 3,\r\n  };\r\n\r\n  const auctionItem = {\r\n    id: seed,\r\n    title,\r\n    itemType: propertyType,\r\n    imageUrl,\r\n    appraisedValue,\r\n    startingBid,\r\n    marketPrice,\r\n    riskType,\r\n    riskData,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n  };\r\n\r\n  console.log(`✅ 매물 데이터 생성 완료: ${title}`);\r\n  console.log(\r\n    `💰 가격 정보: 감정가 ${appraisedValue}원, 시장가 ${marketPrice}원, 시작입찰가 ${startingBid}원`\r\n  );\r\n\r\n  return auctionItem;\r\n}\r\n\r\n/**\r\n * 매물 ID로 매물 정보를 조회하는 함수\r\n * 기존 API 로직을 재사용하여 일관된 데이터를 반환합니다.\r\n */\r\nasync function getAuctionItemById(id: string) {\r\n  try {\r\n    console.log(`🔍 매물 정보 조회 시작 - ID: ${id}`);\r\n\r\n    // 매물 ID를 기반으로 랜덤 데이터 생성 (일관성을 위해 시드 사용)\r\n    let seed = id;\r\n    if (id.includes(\"_\")) {\r\n      // 언더스코어가 있는 경우 마지막 부분을 시드로 사용\r\n      const parts = id.split(\"_\");\r\n      seed = parts[parts.length - 1] || id;\r\n    }\r\n\r\n    console.log(`🔍 사용할 시드: ${seed}`);\r\n\r\n    // 시드 기반 매물 데이터 생성\r\n    const auctionItem = generateRandomPropertyWithSeed(seed);\r\n\r\n    console.log(`✅ 매물 정보 조회 완료: ${auctionItem.title}`);\r\n    return auctionItem;\r\n  } catch (error) {\r\n    console.error(\"❌ 매물 정보 조회 실패:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 입찰 처리 API\r\n * POST /api/auctions/[id]/bid\r\n *\r\n * 사용자의 입찰을 처리하고 시뮬레이션 결과를 계산합니다.\r\n * 요청 본문: { userId: string, bidAmount: number }\r\n */\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: Promise<{ id: string }> }\r\n) {\r\n  try {\r\n    const resolvedParams = await params;\r\n    const auctionItemId = resolvedParams.id;\r\n    console.log(`🎯 입찰 처리 시작 - 매물 ID: ${auctionItemId}`);\r\n\r\n    // 요청 본문 파싱\r\n    const body = await request.json();\r\n    const { bidAmount } = body;\r\n\r\n    // 입력값 검증\r\n    if (!bidAmount || bidAmount <= 0) {\r\n      console.log(\"❌ 잘못된 입력값:\", { bidAmount });\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: \"입찰가를 올바르게 입력해주세요\",\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`💰 입찰가: ${bidAmount}원`);\r\n\r\n    // 실제 매물 데이터 조회 (기존 API 로직 재사용)\r\n    const auctionItem = await getAuctionItemById(auctionItemId);\r\n\r\n    if (!auctionItem) {\r\n      console.log(\"❌ 매물을 찾을 수 없습니다:\", auctionItemId);\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: \"매물을 찾을 수 없습니다\",\r\n        },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    console.log(\r\n      `📦 매물 정보: ${auctionItem.title}, 감정가: ${auctionItem.appraisedValue}원, 시장가: ${auctionItem.marketPrice}원`\r\n    );\r\n    console.log(`🔍 매물 상세 정보:`, {\r\n      id: auctionItem.id,\r\n      title: auctionItem.title,\r\n      appraisedValue: auctionItem.appraisedValue,\r\n      marketPrice: auctionItem.marketPrice,\r\n      startingBid: auctionItem.startingBid,\r\n      riskType: auctionItem.riskType,\r\n    });\r\n\r\n    // 시뮬레이션 결과 계산\r\n    console.log(\r\n      `🧮 시뮬레이션 계산 시작 - 입찰가: ${bidAmount}원, 감정가: ${auctionItem.appraisedValue}원, 시장가: ${auctionItem.marketPrice}원`\r\n    );\r\n    const simulationResult = calculateSimulationResult(auctionItem, bidAmount);\r\n    console.log(`📊 시뮬레이션 결과:`, simulationResult);\r\n    console.log(`💰 최종 수익/손실: ${simulationResult.profitOrLoss}원`);\r\n\r\n    // 성공 응답 반환 - 원래 매물의 가격 정보를 그대로 사용\r\n    const responseData = {\r\n      success: true,\r\n      finalBid: bidAmount,\r\n      profitOrLoss: simulationResult.profitOrLoss,\r\n      marketPrice: auctionItem.marketPrice, // 원래 매물의 시장가 사용\r\n      appraisedValue: auctionItem.appraisedValue, // 원래 매물의 감정가 사용\r\n      riskLevel: auctionItem.riskType,\r\n      recommendation: simulationResult.recommendation,\r\n      details: {\r\n        competitionLevel: \"보통\",\r\n        biddingHistory: [\r\n          { bid: bidAmount - 100000, timestamp: new Date().toISOString() },\r\n          { bid: bidAmount, timestamp: new Date().toISOString() },\r\n        ],\r\n        marketTrend: \"안정적\",\r\n      },\r\n      message: \"입찰 처리가 완료되었습니다\",\r\n    };\r\n\r\n    console.log(`✅ 입찰 응답 데이터:`, {\r\n      finalBid: responseData.finalBid,\r\n      profitOrLoss: responseData.profitOrLoss,\r\n      marketPrice: responseData.marketPrice,\r\n      appraisedValue: responseData.appraisedValue,\r\n      riskLevel: responseData.riskLevel,\r\n      originalMarketPrice: auctionItem.marketPrice,\r\n      originalAppraisedValue: auctionItem.appraisedValue,\r\n      priceConsistency: {\r\n        marketPriceMatch: responseData.marketPrice === auctionItem.marketPrice,\r\n        appraisedValueMatch:\r\n          responseData.appraisedValue === auctionItem.appraisedValue,\r\n      },\r\n    });\r\n\r\n    return NextResponse.json(responseData, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"❌ 입찰 처리 중 오류 발생:\", error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: \"입찰 처리 중 오류가 발생했습니다\",\r\n        details: error instanceof Error ? error.message : \"알 수 없는 오류\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 시뮬레이션 결과 계산 함수\r\n * 매물의 위험도와 입찰가를 기반으로 결과를 계산합니다.\r\n */\r\nfunction calculateSimulationResult(auctionItem: any, bidAmount: number) {\r\n  const { appraisedValue, marketPrice, riskType } = auctionItem;\r\n\r\n  console.log(\r\n    `🔍 시뮬레이션 계산 시작 - 입찰가: ${bidAmount}원, 감정가: ${appraisedValue}원, 시장가: ${marketPrice}원`\r\n  );\r\n\r\n  // 원래 시장가와 감정가를 유지 (조정하지 않음)\r\n  console.log(\r\n    `📊 원래 가격 유지 - 시장가: ${marketPrice}원, 감정가: ${appraisedValue}원`\r\n  );\r\n\r\n  // 기본 확률 계산 (감정가 대비 입찰가 비율)\r\n  const bidRatio = bidAmount / appraisedValue;\r\n\r\n  // 위험도에 따른 성공 확률 조정\r\n  let successProbability = 0.7; // 기본 성공 확률 70%\r\n\r\n  switch (riskType) {\r\n    case \"LOW\":\r\n      successProbability = 0.9; // 낮은 위험: 90%\r\n      break;\r\n    case \"MEDIUM\":\r\n      successProbability = 0.7; // 중간 위험: 70%\r\n      break;\r\n    case \"HIGH\":\r\n      successProbability = 0.4; // 높은 위험: 40%\r\n      break;\r\n    case \"VERY_HIGH\":\r\n      successProbability = 0.2; // 매우 높은 위험: 20%\r\n      break;\r\n  }\r\n\r\n  // 입찰가가 감정가보다 높으면 성공 확률 감소\r\n  if (bidAmount > appraisedValue) {\r\n    successProbability *= 0.5;\r\n  }\r\n\r\n  // 랜덤 결과 생성\r\n  const randomValue = Math.random();\r\n  const isSuccess = randomValue < successProbability;\r\n\r\n  let profitOrLoss = 0;\r\n  let recommendation = \"\";\r\n\r\n  if (isSuccess) {\r\n    // 성공한 경우\r\n    // 수익 계산 (원래 시장가 - 입찰가)\r\n    profitOrLoss = marketPrice - bidAmount;\r\n\r\n    if (profitOrLoss > 0) {\r\n      // 이익인 경우\r\n      recommendation = \"🎉 축하합니다! 수익을 거두었습니다.\";\r\n      console.log(`💰 이익 발생: ${profitOrLoss}원`);\r\n    } else {\r\n      // 손실인 경우\r\n      recommendation = \"⚠️ 입찰가가 시장가보다 높아 손실이 발생했습니다.\";\r\n      console.log(`💸 손실 발생: ${Math.abs(profitOrLoss)}원`);\r\n    }\r\n  } else {\r\n    // 실패한 경우\r\n    profitOrLoss = -bidAmount; // 입찰가만큼 손실\r\n    recommendation = \"❌ 입찰에 실패했습니다. 다음 기회를 노려보세요.\";\r\n    console.log(`❌ 입찰 실패: ${bidAmount}원 손실`);\r\n  }\r\n\r\n  // 시뮬레이션 결과 반환\r\n  return {\r\n    profitOrLoss,\r\n    recommendation,\r\n    successProbability: Math.round(successProbability * 100), // 백분율로 반환\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA;;;CAGC,GACD,SAAS,+BAA+B,IAAY;IAClD,MAAM,YAAY;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,gBAAgB;QACpB;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,YAAY;QAAC;QAAO;QAAU;QAAQ;KAAY;IAExD,uBAAuB;IACvB,MAAM,WAAW,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG;QACzC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,UAAU,CAAC;QAChC,OAAO,IAAI;IACb,GAAG;IAEH,MAAM,gBAAgB,KAAK,GAAG,CAAC,YAAY,UAAU,MAAM;IAC3D,MAAM,oBAAoB,KAAK,GAAG,CAAC,YAAY,KAAK,cAAc,MAAM;IACxE,MAAM,gBAAgB,KAAK,GAAG,CAAC,YAAY,MAAM,UAAU,MAAM;IAEjE,MAAM,WAAW,SAAS,CAAC,cAAc;IACzC,MAAM,eAAe,aAAa,CAAC,kBAAkB;IACrD,MAAM,WAAW,SAAS,CAAC,cAAc;IAEzC,0BAA0B;IAC1B,IAAI,MAAM;IAEV,OAAQ;QACN,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,IAAK,UAAU;YACvD,iBAAiB,YAAa,KAAK,GAAG,CAAC,YAAY,MAAM,YAAa,SAAS;YAC/E;QACF,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,IAAK,SAAS;YACtD,iBAAiB,YAAa,KAAK,GAAG,CAAC,YAAY,MAAM,WAAY,WAAW;YAChF;QACF,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,IAAK,UAAU;YACvD,iBAAiB,YAAa,KAAK,GAAG,CAAC,YAAY,MAAM,WAAY,SAAS;YAC9E;QACF,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAM,UAAU;YACxD,iBAAiB,YAAa,KAAK,GAAG,CAAC,YAAY,MAAM,YAAa,SAAS;YAC/E;QACF,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAM,UAAU;YACxD,iBAAiB,YAAa,KAAK,GAAG,CAAC,YAAY,MAAM,YAAa,SAAS;YAC/E;QACF,KAAK;YACH,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM,IAAK,SAAS;YACtD,iBAAiB,WAAY,KAAK,GAAG,CAAC,YAAY,MAAM,WAAY,SAAS;YAC7E;QACF;YACE,OAAO,KAAM,KAAK,GAAG,CAAC,YAAY,MAAM;YACxC,iBAAiB,WAAY,KAAK,GAAG,CAAC,YAAY,MAAM;IAC5D;IAEA,uBAAuB;IACvB,MAAM,kBAAkB,MAAM,AAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAM;IAChE,MAAM,cAAc,KAAK,KAAK,CAAC,iBAAiB;IAEhD,iCAAiC;IACjC,MAAM,kBAAkB,OAAO,AAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAM,KAAK,UAAU;IAChF,MAAM,cAAc,KAAK,KAAK,CAAC,iBAAiB;IAEhD,gCAAgC;IAChC,IAAI,QAAQ;IAEZ,OAAQ;QACN,KAAK;YACH,MAAM,kBAAkB;gBACtB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,gBACJ,eAAe,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,gBAAgB,MAAM,CAAC;YACpE,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,KAAK,WAAW;YAC/E,MAAM,WAAW,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YACxE,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,OAAO;YACrE,QAAQ,GAAG,SAAS,CAAC,EAAE,cAAc,CAAC,EAAE,YAAY,EAAE,EAAE,WAAW,QAAQ,CAAC,CAAC;YAC7E;QACF,KAAK;YACH,MAAM,kBAAkB;gBACtB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,gBACJ,eAAe,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,gBAAgB,MAAM,CAAC;YACpE,MAAM,iBAAiB,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YAC9E,MAAM,gBAAgB,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YAC7E,QAAQ,GAAG,SAAS,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,EAAE,EAAE,cAAc,CAAC,CAAC;YAC3E;QACF,KAAK;YACH,MAAM,aAAa;gBACjB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,YACJ,UAAU,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,WAAW,MAAM,CAAC;YAC1D,MAAM,aAAa,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,OAAO;YACxE,MAAM,YAAY,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YACzE,QAAQ,GAAG,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,EAAE,UAAU,CAAC,CAAC;YAC/D;QACF,KAAK;YACH,MAAM,kBAAkB;gBACtB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,iBACJ,eAAe,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,gBAAgB,MAAM,CAAC;YACpE,MAAM,kBAAkB,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,OAAO;YAC7E,MAAM,iBAAiB,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YAC9E,QAAQ,GAAG,SAAS,CAAC,EAAE,eAAe,CAAC,EAAE,gBAAgB,EAAE,EAAE,eAAe,CAAC,CAAC;YAC9E;QACF,KAAK;YACH,MAAM,aAAa;gBACjB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,YACJ,UAAU,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,WAAW,MAAM,CAAC;YAC1D,QAAQ,GAAG,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3C;QACF,KAAK;YACH,MAAM,cAAc;gBAClB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,MAAM,aACJ,WAAW,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,YAAY,MAAM,CAAC;YAC5D,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YAC3E,MAAM,aAAa,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,QAAQ;YAC1E,QAAQ,GAAG,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,EAAE,EAAE,WAAW,CAAC,CAAC;YAClE;QACF;YACE,QAAQ,GAAG,SAAS,CAAC,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC;IAClD;IAEA,4BAA4B;IAC5B,MAAM,YAAY,KAAK,GAAG,CACxB,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,EAAE,UAAU,CAAC,IAAI;IAEvD,MAAM,WAAW,CAAC,kCAAkC,EAAE,UAAU,qBAAqB,CAAC;IAEtF,kBAAkB;IAClB,MAAM,WAAW;QACf,aAAa,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM;QAC9C,kBAAkB,KAAK,GAAG,CAAC,YAAY,MAAM;QAC7C,kBAAkB,KAAK,GAAG,CAAC,YAAY,OAAO;IAChD;IAEA,MAAM,cAAc;QAClB,IAAI;QACJ;QACA,UAAU;QACV;QACA;QACA;QACA;QACA;QACA;QACA,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;IACnC;IAEA,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,OAAO;IACtC,QAAQ,GAAG,CACT,CAAC,cAAc,EAAE,eAAe,OAAO,EAAE,YAAY,SAAS,EAAE,YAAY,CAAC,CAAC;IAGhF,OAAO;AACT;AAEA;;;CAGC,GACD,eAAe,mBAAmB,EAAU;IAC1C,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,IAAI;QAExC,wCAAwC;QACxC,IAAI,OAAO;QACX,IAAI,GAAG,QAAQ,CAAC,MAAM;YACpB,8BAA8B;YAC9B,MAAM,QAAQ,GAAG,KAAK,CAAC;YACvB,OAAO,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,IAAI;QACpC;QAEA,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,MAAM;QAEhC,kBAAkB;QAClB,MAAM,cAAc,+BAA+B;QAEnD,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,YAAY,KAAK,EAAE;QACjD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,OAAO;IACT;AACF;AASO,eAAe,KACpB,OAAoB,EACpB,EAAE,MAAM,EAAuC;IAE/C,IAAI;QACF,MAAM,iBAAiB,MAAM;QAC7B,MAAM,gBAAgB,eAAe,EAAE;QACvC,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,eAAe;QAEnD,WAAW;QACX,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,SAAS,EAAE,GAAG;QAEtB,SAAS;QACT,IAAI,CAAC,aAAa,aAAa,GAAG;YAChC,QAAQ,GAAG,CAAC,cAAc;gBAAE;YAAU;YACtC,OAAO,+QAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAEnC,+BAA+B;QAC/B,MAAM,cAAc,MAAM,mBAAmB;QAE7C,IAAI,CAAC,aAAa;YAChB,QAAQ,GAAG,CAAC,oBAAoB;YAChC,OAAO,+QAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CACT,CAAC,UAAU,EAAE,YAAY,KAAK,CAAC,OAAO,EAAE,YAAY,cAAc,CAAC,QAAQ,EAAE,YAAY,WAAW,CAAC,CAAC,CAAC;QAEzG,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE;YAC1B,IAAI,YAAY,EAAE;YAClB,OAAO,YAAY,KAAK;YACxB,gBAAgB,YAAY,cAAc;YAC1C,aAAa,YAAY,WAAW;YACpC,aAAa,YAAY,WAAW;YACpC,UAAU,YAAY,QAAQ;QAChC;QAEA,cAAc;QACd,QAAQ,GAAG,CACT,CAAC,sBAAsB,EAAE,UAAU,QAAQ,EAAE,YAAY,cAAc,CAAC,QAAQ,EAAE,YAAY,WAAW,CAAC,CAAC,CAAC;QAE9G,MAAM,mBAAmB,0BAA0B,aAAa;QAChE,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE;QAC5B,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,iBAAiB,YAAY,CAAC,CAAC,CAAC;QAE5D,kCAAkC;QAClC,MAAM,eAAe;YACnB,SAAS;YACT,UAAU;YACV,cAAc,iBAAiB,YAAY;YAC3C,aAAa,YAAY,WAAW;YACpC,gBAAgB,YAAY,cAAc;YAC1C,WAAW,YAAY,QAAQ;YAC/B,gBAAgB,iBAAiB,cAAc;YAC/C,SAAS;gBACP,kBAAkB;gBAClB,gBAAgB;oBACd;wBAAE,KAAK,YAAY;wBAAQ,WAAW,IAAI,OAAO,WAAW;oBAAG;oBAC/D;wBAAE,KAAK;wBAAW,WAAW,IAAI,OAAO,WAAW;oBAAG;iBACvD;gBACD,aAAa;YACf;YACA,SAAS;QACX;QAEA,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE;YAC1B,UAAU,aAAa,QAAQ;YAC/B,cAAc,aAAa,YAAY;YACvC,aAAa,aAAa,WAAW;YACrC,gBAAgB,aAAa,cAAc;YAC3C,WAAW,aAAa,SAAS;YACjC,qBAAqB,YAAY,WAAW;YAC5C,wBAAwB,YAAY,cAAc;YAClD,kBAAkB;gBAChB,kBAAkB,aAAa,WAAW,KAAK,YAAY,WAAW;gBACtE,qBACE,aAAa,cAAc,KAAK,YAAY,cAAc;YAC9D;QACF;QAEA,OAAO,+QAAY,CAAC,IAAI,CAAC,cAAc;YAAE,QAAQ;QAAI;IACvD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAElC,OAAO,+QAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAEA;;;CAGC,GACD,SAAS,0BAA0B,WAAgB,EAAE,SAAiB;IACpE,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG;IAElD,QAAQ,GAAG,CACT,CAAC,sBAAsB,EAAE,UAAU,QAAQ,EAAE,eAAe,QAAQ,EAAE,YAAY,CAAC,CAAC;IAGtF,4BAA4B;IAC5B,QAAQ,GAAG,CACT,CAAC,mBAAmB,EAAE,YAAY,QAAQ,EAAE,eAAe,CAAC,CAAC;IAG/D,2BAA2B;IAC3B,MAAM,WAAW,YAAY;IAE7B,mBAAmB;IACnB,IAAI,qBAAqB,KAAK,eAAe;IAE7C,OAAQ;QACN,KAAK;YACH,qBAAqB,KAAK,aAAa;YACvC;QACF,KAAK;YACH,qBAAqB,KAAK,aAAa;YACvC;QACF,KAAK;YACH,qBAAqB,KAAK,aAAa;YACvC;QACF,KAAK;YACH,qBAAqB,KAAK,gBAAgB;YAC1C;IACJ;IAEA,0BAA0B;IAC1B,IAAI,YAAY,gBAAgB;QAC9B,sBAAsB;IACxB;IAEA,WAAW;IACX,MAAM,cAAc,KAAK,MAAM;IAC/B,MAAM,YAAY,cAAc;IAEhC,IAAI,eAAe;IACnB,IAAI,iBAAiB;IAErB,IAAI,WAAW;QACb,SAAS;QACT,uBAAuB;QACvB,eAAe,cAAc;QAE7B,IAAI,eAAe,GAAG;YACpB,SAAS;YACT,iBAAiB;YACjB,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC1C,OAAO;YACL,SAAS;YACT,iBAAiB;YACjB,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,GAAG,CAAC,cAAc,CAAC,CAAC;QACpD;IACF,OAAO;QACL,SAAS;QACT,eAAe,CAAC,WAAW,WAAW;QACtC,iBAAiB;QACjB,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,UAAU,IAAI,CAAC;IACzC;IAEA,cAAc;IACd,OAAO;QACL;QACA;QACA,oBAAoB,KAAK,KAAK,CAAC,qBAAqB;IACtD;AACF","debugId":null}}]
}